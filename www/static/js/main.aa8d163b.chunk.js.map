{"version":3,"sources":["redux/item/reducers.ts","redux/item/types.ts","redux/player/reducers.ts","redux/player/types.ts","redux/search/types.ts","redux/search/reducers.ts","redux/index.ts","services/player.ts","redux/search/actions.ts","Header/Header.tsx","redux/player/actions.ts","Footer/Footer.tsx","List/ListItem.tsx","services/items.ts","redux/item/actions.ts","List/List.tsx","SideBar.tsx","serviceWorker.ts","index.tsx","App.tsx"],"names":["LoadingState","ACTION_ITEMS_FETCH","ACTION_ITEMS_FETCH_SUCCESS","ACTION_ITEMS_FETCH_ERROR","initialState","state","INIT","items","errorMessage","ACTION_PLAYER_INFO","ACTION_PLAYER_INFO_SUCCESS","ACTION_PLAYER_INFO_ERROR","info","ACTION_SEARCH_ITEMS_FETCH","ACTION_SEARCH_ITEMS_FETCH_SUCCESS","ACTION_SEARCH_ITEMS_FETCH_ERROR","ACTION_ACTIVATE_SEARCH","searchActivated","rootReducer","combineReducers","arguments","length","undefined","action","type","Object","objectSpread","LOADING","LOADED","ERROR","search","isActive","player","createStore","applyMiddleware","thunk","PlayerService","item","url","title","fetch","then","response","ok","Error","statusText","json","catch","e","query","actionActivateSearch","dispatch","dispatchActivateSearch","actionSearch","searchStations","res","message","dispatchSearchError","Header","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isSearching","activateSearch","setState","onSearch","event","target","value","react_default","a","createElement","className","placeholder","onChange","onClick","React","Component","connect","searchState","isActivated","dispatchFetchPlayerInfo","dispatchFetchPlayerInfoError","actionFetchPlayerInfo","toString","Footer","loadData","ListItem","selected","index","ItemsService","method","headers","Headers","x-apikey","actionFetchItems","getAll","dispatchFetchItemsError","List","play","currentPlayingUrl","_this2","id","itemsState","map","i","List_ListItem","key","isPlaying","_","actionPlay","SideBar","BurgerMenu","href","Boolean","window","location","hostname","match","ReactDOM","render","es","store","src_Header_Header","src_List_List","src_Footer_Footer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kLAGYA,yDCHCC,EAAqB,cACrBC,EAA6B,sBAC7BC,EAA2B,8BDC5BH,uGAaZ,IAAMI,EAA2B,CAC/BC,MAAOL,EAAaM,KACpBC,MAAO,GACPC,aAAc,QEfJR,kBCJCS,EAAqB,cACrBC,EAA6B,sBAC7BC,EAA2B,8BDE5BX,uGAaZ,IAAMI,EAA4B,CAChCC,MAAOL,EAAaM,KACpBM,KAAM,GACNJ,aAAc,IEpBT,ICGKR,EDHCa,EAA4B,qBAC5BC,EAAoC,6BACpCC,EAAkC,2BAClCC,EAAyB,4BCA1BhB,uGAcZ,ICXYA,EDWNI,EAA4B,CAChCC,MAAOL,EAAaM,KACpBC,MAAO,GACPC,aAAc,GACdS,iBAAiB,aCfPjB,uGAaZ,IAAMkB,EAAcC,YAAgB,CAClCZ,MNEK,WAGA,IAFLF,EAEKe,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFGhB,EACRmB,EACKH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACL,OAAQC,EAAOC,MACb,KAAKvB,EACH,OAAOwB,OAAAC,EAAA,EAAAD,CAAA,GAAKpB,EAAZ,CAAmBE,MAAOgB,EAAOhB,MAAOF,MAAOL,EAAa2B,UAE9D,KAAKzB,EACH,OAAOuB,OAAAC,EAAA,EAAAD,CAAA,GAAKpB,EAAZ,CAAmBE,MAAOgB,EAAOhB,MAAOF,MAAOL,EAAa4B,SAE9D,KAAKzB,EACH,OAAOsB,OAAAC,EAAA,EAAAD,CAAA,GAAKpB,EAAZ,CAAmBG,aAAce,EAAQlB,MAAOL,EAAa6B,QAE/D,QACE,OAAOxB,IMhBXyB,ODGK,WAGA,IAFLzB,EAEKe,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFGhB,EACRmB,EACKH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACL,OAAQC,EAAOC,MACb,KAAKX,EACH,OAAOY,OAAAC,EAAA,EAAAD,CAAA,GAAKpB,EAAZ,CAAmBE,MAAOgB,EAAOhB,MAAOF,MAAOL,EAAa2B,UAE9D,KAAKb,EACH,OAAOW,OAAAC,EAAA,EAAAD,CAAA,GAAKpB,EAAZ,CAAmBE,MAAOgB,EAAOhB,MAAOF,MAAOL,EAAa4B,SAE9D,KAAKb,EACH,OAAOU,OAAAC,EAAA,EAAAD,CAAA,GAAKpB,EAAZ,CAAmBG,aAAce,EAAQlB,MAAOL,EAAa6B,QAE/D,KAAKb,EACH,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GAAKpB,EAAZ,CAAmBY,gBAAiBM,EAAOQ,WAE7C,QACE,OAAO1B,ICpBX2B,OJCK,WAGA,IAFL3B,EAEKe,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFGhB,EACRmB,EACKH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACL,OAAQC,EAAOC,MACb,KAAKf,EACH,OAAOgB,OAAAC,EAAA,EAAAD,CAAA,GAAKpB,EAAZ,CAAmBA,MAAOL,EAAa2B,UAEzC,KAAKjB,EACH,OAAOe,OAAAC,EAAA,EAAAD,CAAA,GAAKpB,EAAZ,CAAmBO,KAAMW,EAAOX,KAAMP,MAAOL,EAAa4B,SAE5D,KAAKjB,EACH,OAAOc,OAAAC,EAAA,EAAAD,CAAA,GAAKpB,EAAZ,CAAmBG,aAAce,EAAOf,aAAcH,MAAOL,EAAa6B,QAE5E,QACE,OAAOxB,MIbE4B,cAAYf,EAAagB,YAAgBC,iDChBnCC,oGACLC,GACR,IAAMC,EAAa,aAAeD,EAAKC,IAAM,UAAYD,EAAKE,MAC9D,OAAOC,MAAMF,GAAKG,KAAK,SAASC,GAC5B,IAAKA,EAASC,GACV,MAAMC,MAAMF,EAASG,YAEzB,OAAOH,EAASI,SACjBC,MAAM,SAAAC,GACL,MAAMJ,MAAM,6DAMhB,OAAOJ,MADY,SACDC,KAAK,SAASC,GAC5B,IAAKA,EAASC,GACV,MAAMC,MAAMF,EAASG,YAEzB,OAAOH,EAASI,SACjBC,MAAM,SAAAC,GACL,MAAMJ,MAAM,qEAIEK,GAElB,OAAOT,MADY,iBAAmBS,GACpBR,KAAK,SAASC,GAC5B,IAAKA,EAASC,GACV,MAAMC,MAAMF,EAASG,YAEzB,OAAOH,EAASI,SACjBC,MAAM,SAAAC,GACL,MAAMJ,MAAM,uCCXjB,SAASM,EAAqBnB,GACnC,OAAO,SAACoB,GACNA,EATJ,SAAgCpB,GAC9B,MAAO,CACLP,KAAMR,EACNe,YAMSqB,CAAuBrB,KAI7B,SAASsB,EAAaJ,GAC3B,OAAO,SAACE,GAEN,OADAA,EAlCK,CACL3B,KAAMX,IAkCCuB,EAAckB,eAAeL,GACnCR,KAAK,SAACc,GACL,OAAOJ,EA/BJ,CACL3B,KAAMV,EACNP,MA6BuCgD,MAEtCR,MAAM,SAACC,GACN,OAAOG,EA5Bb,SAA6BH,GAC3B,MAAO,CACLxB,KAAMT,EACNP,aAAcwC,EAAEQ,SAyBEC,CAAoBT,WCvCpCU,cAGF,SAAAA,EAAYC,EAAYtD,GAAoB,IAAAuD,EAAA,OAAAnC,OAAAoC,EAAA,EAAApC,CAAAqC,KAAAJ,IACxCE,EAAAnC,OAAAsC,EAAA,EAAAtC,CAAAqC,KAAArC,OAAAuC,EAAA,EAAAvC,CAAAiC,GAAAO,KAAAH,KAAMH,EAAOtD,KAGjBA,MAAQ,CACJ6D,aAAa,GAL2BN,EAQ5CO,eAAiB,WACbP,EAAKQ,SAAS,CAAEF,aAAcN,EAAKvD,MAAM6D,cACzCN,EAAKD,MAAMQ,gBAAgBP,EAAKvD,MAAM6D,cAVEN,EAa5CS,SAAW,SAACC,GACRV,EAAKD,MAAM7B,OAAOwC,EAAMC,OAAOC,QAdSZ,wEAkBxC,OACIa,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAYd,KAAKzD,MAAM6D,YAAc,iBAAmB,iBACzDO,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SAAOnD,KAAK,OAAOoD,UAAU,+BAA+BC,YAAY,YAAYC,SAAUhB,KAAKO,YAEvGI,EAAAC,EAAAC,cAAA,KAAGI,QAASjB,KAAKK,eAAgBS,UAAY,WAAad,KAAKzD,MAAM6D,YAAc,QAAU,qBA5B5Fc,IAAMC,WAgDZC,cAbS,SAAC7E,GACrB,MAAO,CACH8E,YAAa9E,EAAMyB,SAIA,SAACqB,GACxB,MAAO,CACHrB,OAAQ,SAACmB,GAAD,OAAmBE,EAASE,EAAaJ,KACjDkB,eAAgB,SAACiB,GAAD,OAA0BjC,EAASD,EAAqBkC,OAIjEF,CAA6CxB,GChD5D,SAAS2B,IACP,MAAO,CACL7D,KAAMf,GAWV,SAAS6E,EAA6B9E,GACpC,MAAO,CACLgB,KAAMb,EACNH,gBAIG,SAAS+E,IACd,OAAO,SAACpC,GAEN,OADAA,EAASkC,KACFjD,EAAcxB,OACpB6B,KAAK,SAACc,GACL,OAAOJ,EAlBJ,CACL3B,KAAMd,EACNE,KAgBiD2C,MAEhDR,MAAM,SAACC,GACN,OAAOG,EAASmC,EAA6BtC,EAAEwC,oBC5B/CC,cAGF,SAAAA,EAAY9B,EAAYtD,GAAqB,OAAAoB,OAAAoC,EAAA,EAAApC,CAAAqC,KAAA2B,GAAAhE,OAAAsC,EAAA,EAAAtC,CAAAqC,KAAArC,OAAAuC,EAAA,EAAAvC,CAAAgE,GAAAxB,KAAAH,KACnCH,EAAOtD,qFAITyD,KAAKH,MAAMtD,QAAUL,EAAaM,MAClCwD,KAAKH,MAAM+B,4CAIV,IAAA9B,EAAAE,KACL,OACIW,EAAAC,EAAAC,cAAA,cACM,WACE,OAAOf,EAAKD,MAAMtD,OACd,KAAKL,EAAa2B,QACd,OAAO8C,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAnB,gBACX,KAAK5E,EAAa4B,OACd,OAAO6C,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAoBhB,EAAKD,MAAM/C,KAAK2B,OAClE,KAAKvC,EAAa6B,MACd,OAAO4C,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAqBhB,EAAKD,MAAMnD,cAC9D,QACI,OAAO,MATjB,WAhBGwE,IAAMC,WAyCZC,cARS,SAAC7E,GAAD,OAAqBA,EAAM2B,QAExB,SAACmB,GACxB,MAAO,CACLuC,SAAU,kBAAMvC,EAASoC,QAIhBL,CAA6CO,GC9B7CE,EAPE,SAAChC,GAAD,OACbc,EAAAC,EAAAC,cAAA,MAAII,QAAS,kBAAMpB,EAAMoB,QAAQpB,EAAMtB,QACjCsB,EAAMiC,SAAWnB,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAnB,KAAgDH,EAAAC,EAAAC,cAAA,YAAQhB,EAAMkC,MAAQ,EAAtB,MACjElC,EAAMtB,KAAKE,QCTAuD,wGAEb,OAAOtD,MAJQ,6CAIc,CACzBuD,OAAQ,MACRC,QAAS,IAAIC,QAAQ,CACjBC,WAAY,+BAEjBzD,KAAK,SAAAc,GAAG,OAAIA,EAAIT,SAAQC,MAAM,SAAAC,GAAC,OAAIA,aCavC,SAASmD,IACd,OAAO,SAAChD,GAEN,OADAA,EArBK,CACL3B,KAAMvB,IAqBC6F,EAAaM,SACnB3D,KAAK,SAACc,GACL,OAAOJ,EAlBJ,CACL3B,KAAMtB,EACNK,MAgB4CgD,MAE3CR,MAAM,SAACC,GACN,OAAOG,EAfb,SAAiCH,GAC/B,MAAO,CACLxB,KAAMrB,EACNK,aAAcwC,EAAEQ,SAYE6C,CAAwBrD,WCvBxCsD,cAGF,SAAAA,EAAY3C,EAAYtD,GAAmB,IAAAuD,EAAA,OAAAnC,OAAAoC,EAAA,EAAApC,CAAAqC,KAAAwC,IACvC1C,EAAAnC,OAAAsC,EAAA,EAAAtC,CAAAqC,KAAArC,OAAAuC,EAAA,EAAAvC,CAAA6E,GAAArC,KAAAH,KAAMH,EAAOtD,KASjB0E,QAAU,SAAC1C,GACPuB,EAAKD,MAAM4C,KAAKlE,IAXuBuB,mFAMvCE,KAAKH,MAAM+B,6CAQLpD,GACN,OAAOwB,KAAKH,MAAM6C,oBAAsBlE,mCAGnC,IAAAmE,EAAA3C,KACL,GAAIA,KAAKH,MAAMwB,YAAYlE,gBACvB,OAAQ6C,KAAKH,MAAMwB,YAAY9E,OAC3B,KAAKL,EAAa2B,QACd,OAAO8C,EAAAC,EAAAC,cAAA,OAAK+B,GAAG,iBAAgBjC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAChD,KAAK5E,EAAa4B,OACd,OAAO6C,EAAAC,EAAAC,cAAA,UACFb,KAAKH,MAAMgD,WAAWpG,MAAMqG,IAAI,SAACvE,EAAYwE,GAAb,OAC7BpC,EAAAC,EAAAC,cAACmC,EAAD,CAAUzE,KAAMA,EAAM0E,IAAKF,EAAGhB,MAAOgB,EAAGjB,SAAUa,EAAKO,UAAU3E,EAAKC,KAAMyC,QAAS0B,EAAK1B,aAGtG,QACI,OAAO,UAGf,OAAQjB,KAAKH,MAAMgD,WAAWtG,OAC1B,KAAKL,EAAa2B,QACd,OAAO8C,EAAAC,EAAAC,cAAA,OAAK+B,GAAG,iBAAgBjC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAChD,KAAK5E,EAAa4B,OACd,OAAO6C,EAAAC,EAAAC,cAAA,UACFb,KAAKH,MAAMgD,WAAWpG,MAAMqG,IAAI,SAACvE,EAAYwE,GAAb,OAC7BpC,EAAAC,EAAAC,cAACmC,EAAD,CAAUzE,KAAMA,EAAM0E,IAAKF,EAAGhB,MAAOgB,EAAGjB,SAAUa,EAAKO,UAAU3E,EAAKC,KAAMyC,QAAS0B,EAAK1B,aAGtG,QACI,OAAO,aA9CRC,IAAMC,WAoEVC,cAfS,SAAC7E,GACrB,MAAO,CACHsG,WAAYtG,EAAME,MAClBiG,kBAAmBnG,EAAM2B,OAAOpB,KAAK0B,IACrC6C,YAAa9E,EAAMyB,SAIA,SAACqB,GACxB,MAAO,CACHuC,SAAU,kBAAMvC,EAASgD,MACzBI,KAAM,SAAClE,GAAD,OAAgBc,ELlCvB,SAAoBd,GACzB,OAAO,SAACc,GAEN,OADAA,EAASkC,KACFjD,EAAcmE,KAAKlE,GACzBI,KAAK,SAAAwE,GACJ,OAAO9D,EAASoC,OAEjBxC,MAAM,SAACC,GACN,OAAOG,EAASmC,EAA6BtC,EAAEwC,gBK0Bd0B,CAAW7E,OAInC6C,CAA6CoB,WC1E7Ca,EAAA,WACb,OAEE1C,EAAAC,EAAAC,cAACyC,EAAA,MAAD,KACE3C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYyC,KAAK,KAA9B,YAIA5C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYyC,KAAK,KAA9B,WAIA5C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYyC,KAAK,KAA9B,cCHcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnD,EAAAC,EAAAC,cCID,kBACbF,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAUC,MAAOA,GACfrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACwC,EAAD,MACA1C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoD,EAAD,CAAQD,MAAOA,IACfrD,EAAAC,EAAAC,cAACqD,EAAD,MACAvD,EAAAC,EAAAC,cAACsD,EAAD,UDXQ,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7F,KAAK,SAAA8F,GACjCA,EAAaC","file":"static/js/main.aa8d163b.chunk.js","sourcesContent":["import { ACTION_ITEMS_FETCH_SUCCESS, ACTION_ITEMS_FETCH_ERROR, ACTION_ITEMS_FETCH } from './types'\nimport { Item } from '../../models/item';\n\nexport enum LoadingState {\n  INIT,\n  LOADING,\n  LOADED,\n  ERROR\n}\n\nexport interface ItemsState {\n  state: LoadingState,\n  items: Item[],\n  errorMessage?: string\n}\n\nconst initialState: ItemsState = {\n  state: LoadingState.INIT,\n  items: [],\n  errorMessage: \"\"\n}\n\nexport function itemReducer(\n  state = initialState,\n  action: any\n): any {\n  switch (action.type) {\n    case ACTION_ITEMS_FETCH: {\n      return { ...state, items: action.items, state: LoadingState.LOADING }\n    }\n    case ACTION_ITEMS_FETCH_SUCCESS: {\n      return { ...state, items: action.items, state: LoadingState.LOADED }\n    }\n    case ACTION_ITEMS_FETCH_ERROR: {\n      return { ...state, errorMessage: action, state: LoadingState.ERROR }\n    }\n    default:\n      return state\n  }\n}","export const ACTION_ITEMS_FETCH = 'ITEMS_FETCH';\nexport const ACTION_ITEMS_FETCH_SUCCESS = 'ITEMS_FETCH_SUCCESS';\nexport const ACTION_ITEMS_FETCH_ERROR = 'ITEMS_FETCH_ERROR';","\nimport { PlayerInfo } from '../../models/playerInfo';\nimport { ACTION_PLAYER_INFO_SUCCESS, ACTION_PLAYER_INFO_ERROR, ACTION_PLAYER_INFO } from './types';\n\nexport enum LoadingState {\n  INIT,\n  LOADING,\n  LOADED,\n  ERROR\n}\n\nexport interface PlayerState {\n  state: LoadingState,\n  info: PlayerInfo,\n  errorMessage?: string\n}\n\nconst initialState: PlayerState = {\n  state: LoadingState.INIT,\n  info: {} as PlayerInfo,\n  errorMessage: \"\"\n}\n\nexport function playerReducer(\n  state = initialState,\n  action: any\n): any {\n  switch (action.type) {\n    case ACTION_PLAYER_INFO: {\n      return { ...state, state: LoadingState.LOADING }\n    }\n    case ACTION_PLAYER_INFO_SUCCESS: {\n      return { ...state, info: action.info, state: LoadingState.LOADED }\n    }\n    case ACTION_PLAYER_INFO_ERROR: {\n      return { ...state, errorMessage: action.errorMessage, state: LoadingState.ERROR }\n    }\n    default:\n      return state\n  }\n}","export const ACTION_PLAYER_INFO = 'PLAYER_INFO';\nexport const ACTION_PLAYER_INFO_SUCCESS = 'PLAYER_INFO_SUCCESS';\nexport const ACTION_PLAYER_INFO_ERROR = 'PLAYER_INFO_ERROR';","export const ACTION_SEARCH_ITEMS_FETCH = 'SEARCH_ITEMS_FETCH';\nexport const ACTION_SEARCH_ITEMS_FETCH_SUCCESS = 'SEARCH_ITEMS_FETCH_SUCCESS';\nexport const ACTION_SEARCH_ITEMS_FETCH_ERROR = 'SEARCH_ITEMS_FETCH_ERROR';\nexport const ACTION_ACTIVATE_SEARCH = 'ACTIVATE_SEARCH';","import { ACTION_SEARCH_ITEMS_FETCH_SUCCESS, ACTION_SEARCH_ITEMS_FETCH_ERROR, ACTION_SEARCH_ITEMS_FETCH, ACTION_ACTIVATE_SEARCH } from './types'\nimport { Item } from '../../models/item';\n\nexport enum LoadingState {\n  INIT,\n  LOADING,\n  LOADED,\n  ERROR\n}\n\nexport interface SearchState {\n  state: LoadingState,\n  items: Item[],\n  errorMessage?: string,\n  searchActivated: boolean\n}\n\nconst initialState: SearchState = {\n  state: LoadingState.INIT,\n  items: [],\n  errorMessage: \"\",\n  searchActivated: false\n}\n\nexport function searchReducer(\n  state = initialState,\n  action: any\n): any {\n  switch (action.type) {\n    case ACTION_SEARCH_ITEMS_FETCH: {\n      return { ...state, items: action.items, state: LoadingState.LOADING }\n    }\n    case ACTION_SEARCH_ITEMS_FETCH_SUCCESS: {\n      return { ...state, items: action.items, state: LoadingState.LOADED }\n    }\n    case ACTION_SEARCH_ITEMS_FETCH_ERROR: {\n      return { ...state, errorMessage: action, state: LoadingState.ERROR }\n    }\n    case ACTION_ACTIVATE_SEARCH: {\n      return { ...state, searchActivated: action.isActive }\n    }\n    default:\n      return state\n  }\n}\n","import { itemReducer, ItemsState } from './item/reducers'\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { PlayerState, playerReducer } from './player/reducers';\nimport { SearchState, searchReducer } from './search/reducers';\n\nexport enum LoadingState {\n  INIT,\n  LOADING,\n  LOADED,\n  ERROR\n}\n\nexport interface AppState {\n  items: ItemsState;\n  search: SearchState;\n  player: PlayerState;\n}\n\nconst rootReducer = combineReducers({\n  items: itemReducer,\n  search: searchReducer,\n  player: playerReducer\n})\n\nexport default createStore(rootReducer, applyMiddleware(thunk))","/**\n * Communication with player\n */\n\nimport { Item } from \"../models/item\";\nimport { PlayerInfo } from \"../models/playerInfo\";\n\nconst HOST = process.env.REACT_APP_RADIX_HOST;\n\nexport default class PlayerService {\n    static play(item: Item): Promise<any> {\n        const url = HOST + \"/play?url=\" + item.url + \"&title=\" + item.title;\n        return fetch(url).then(function(response) {\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }\n            return response.json();\n        }).catch(e => {\n            throw Error(\"Offline or wrong address\");\n        });\n    }\n\n    static info(): Promise<PlayerInfo> {\n        const url = HOST + \"/info\";\n        return fetch(url).then(function(response) {\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }\n            return response.json();\n        }).catch(e => {\n            throw Error(\"Offline or wrong address\");\n        });\n    }\n\n    static searchStations(query: string): Promise<Item[]> {\n        const url = HOST + \"/search?query=\" + query;\n        return fetch(url).then(function(response) {\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }\n            return response.json();\n        }).catch(e => {\n            throw Error(\"Offline or wrong address\");\n        });\n    }\n\n}\n","import { Dispatch } from \"redux\";\nimport { ACTION_SEARCH_ITEMS_FETCH_SUCCESS, ACTION_SEARCH_ITEMS_FETCH_ERROR, ACTION_SEARCH_ITEMS_FETCH, ACTION_ACTIVATE_SEARCH } from \"./types\";\nimport PlayerService from \"../../services/player\";\n\nfunction dispatchSearch(): any {\n  return {\n    type: ACTION_SEARCH_ITEMS_FETCH\n  };\n}\n\nfunction dispatchFetchSuccess(items: any[]): any {\n  return {\n    type: ACTION_SEARCH_ITEMS_FETCH_SUCCESS,\n    items\n  };\n}\n\nfunction dispatchSearchError(e: Error): any {\n  return {\n    type: ACTION_SEARCH_ITEMS_FETCH_ERROR,\n    errorMessage: e.message\n  };\n}\n\nfunction dispatchActivateSearch(isActive: boolean): any {\n  return {\n    type: ACTION_ACTIVATE_SEARCH,\n    isActive\n  };\n}\n\nexport function actionActivateSearch(isActive: boolean) {\n  return (dispatch: Dispatch) => {\n    dispatch(dispatchActivateSearch(isActive));\n  };\n}\n\nexport function actionSearch(query: string) {\n  return (dispatch: Dispatch) => {\n    dispatch(dispatchSearch());\n    return PlayerService.searchStations(query)\n    .then((res) => {\n      return dispatch(dispatchFetchSuccess(res));\n    })\n    .catch((e: Error) => {\n      return dispatch(dispatchSearchError(e));\n    });\n  };\n}","import React from \"react\";\nimport { AppState } from \"../redux\";\nimport { actionSearch, actionActivateSearch } from \"../redux/search/actions\";\nimport { connect } from \"react-redux\";\nimport { SearchState } from \"../redux/search/reducers\";\n\nclass Header extends React.Component<any, any>  {\n\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(props: any, state: SearchState) {\n        super(props, state);\n    }\n\n    state = {\n        isSearching: false\n    }\n    \n    activateSearch = () => {\n        this.setState({ isSearching: !this.state.isSearching });\n        this.props.activateSearch(!this.state.isSearching);\n    }\n\n    onSearch = (event: any) => {\n        this.props.search(event.target.value);\n    }\n\n    render() {\n        return (\n            <header>\n                <div className=\"container\">\n                    <div className={ this.state.isSearching ? \"search-visible\" : \"search-hidden\" }>\n                        <span>STATIONS</span>\n                        <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Search...\" onChange={this.onSearch}/>\n                    </div>\n                    <i onClick={this.activateSearch} className={ \"fas fa-\" + (this.state.isSearching ? 'times' : 'search') }></i>\n                </div>\n            </header>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        searchState: state.search\n    }\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        search: (query: string) => dispatch(actionSearch(query)),\n        activateSearch: (isActivated: boolean) => dispatch(actionActivateSearch(isActivated))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import { Dispatch } from \"redux\";\nimport { ACTION_PLAYER_INFO_SUCCESS, ACTION_PLAYER_INFO_ERROR, ACTION_PLAYER_INFO } from \"./types\";\nimport PlayerService from \"../../services/player\";\nimport { PlayerInfo } from \"../../models/playerInfo\";\nimport { Item } from \"../../models/item\";\n\nfunction dispatchFetchPlayerInfo(): any {\n  return {\n    type: ACTION_PLAYER_INFO\n  };\n}\n\nfunction dispatchFetchPlayerInfoSuccess(info: PlayerInfo): any {\n  return {\n    type: ACTION_PLAYER_INFO_SUCCESS,\n    info\n  };\n}\n\nfunction dispatchFetchPlayerInfoError(errorMessage: string): any {\n  return {\n    type: ACTION_PLAYER_INFO_ERROR,\n    errorMessage\n  };\n}\n\nexport function actionFetchPlayerInfo() {\n  return (dispatch: Dispatch) => {\n    dispatch(dispatchFetchPlayerInfo());\n    return PlayerService.info()\n    .then((res) => {\n      return dispatch(dispatchFetchPlayerInfoSuccess(res));\n    })\n    .catch((e: string) => {\n      return dispatch(dispatchFetchPlayerInfoError(e.toString()));\n    });\n  };\n}\n\nexport function actionPlay(item: Item) {\n  return (dispatch: any) => {\n    dispatch(dispatchFetchPlayerInfo());\n    return PlayerService.play(item)\n    .then(_ => {\n      return dispatch(actionFetchPlayerInfo());\n    })\n    .catch((e: string) => {\n      return dispatch(dispatchFetchPlayerInfoError(e.toString()));\n    });\n  };\n}\n","import React from \"react\";\nimport { LoadingState, AppState } from \"../redux\";\nimport { connect } from \"react-redux\";\nimport { PlayerState } from \"../redux/player/reducers\";\nimport { actionFetchPlayerInfo } from \"../redux/player/actions\";\n\nclass Footer extends React.Component<any, PlayerState> {\n\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(props: any, state: PlayerState) {\n        super(props, state);\n    }\n\n    componentDidMount() {\n        if (this.props.state === LoadingState.INIT) {\n            this.props.loadData();\n        }\n    }\n\n    render() {\n        return (\n            <footer>\n                {(() => {\n                    switch(this.props.state) {\n                        case LoadingState.LOADING:\n                            return <span><i className=\"fas fa-spinner\"></i>Getting Info</span>;\n                        case LoadingState.LOADED:\n                            return <span><i className=\"fas fa-music\"></i>{this.props.info.title}</span>;\n                        case LoadingState.ERROR:\n                            return <span><i className=\"fas fa-unlink\"></i>{this.props.errorMessage}</span>;\n                        default:\n                            return null;\n                        }\n                })()}\n            </footer>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppState) => state.player;\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n      loadData: () => dispatch(actionFetchPlayerInfo())\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);","import React from 'react';\nimport { Item } from '../models/item';\n\ninterface ListItemProps {\n    item: Item;\n    onClick: any; // TODO: add function def\n    index: number;\n    selected: boolean;\n}\n\nconst ListItem = (props: ListItemProps) => (\n    <li onClick={() => props.onClick(props.item)}>    \n        { props.selected ? <span><i className=\"fas fa-play\"></i> </span> : <span>{ props.index + 1 }. </span> }\n        { props.item.title }\n    </li>\n)\n\nexport default ListItem;\n","import { Item } from \"../models/item\";\n\nconst FAVORITES_HOST = \"https://radix-83cd.restdb.io/rest/stations\";\n\nexport default class ItemsService {\n    static getAll(): Promise<Item[]> {\n        return fetch(FAVORITES_HOST, {\n            method: 'GET',\n            headers: new Headers({\n                'x-apikey': '5ae89d7625a622ae4d528762'\n            })\n        }).then(res => res.json()).catch(e => e);\n    }\n}","import { Dispatch } from \"redux\";\nimport ItemsService from \"../../services/items\";\nimport { ACTION_ITEMS_FETCH_SUCCESS, ACTION_ITEMS_FETCH_ERROR, ACTION_ITEMS_FETCH } from \"./types\";\n\nfunction dispatchFetchItems(): any {\n  return {\n    type: ACTION_ITEMS_FETCH\n  };\n}\n\nfunction dispatchFetchItemsSuccess(items: any[]): any {\n  return {\n    type: ACTION_ITEMS_FETCH_SUCCESS,\n    items\n  };\n}\n\nfunction dispatchFetchItemsError(e: Error): any {\n  return {\n    type: ACTION_ITEMS_FETCH_ERROR,\n    errorMessage: e.message\n  };\n}\n\nexport function actionFetchItems() {\n  return (dispatch: Dispatch) => {\n    dispatch(dispatchFetchItems());\n    return ItemsService.getAll()\n    .then((res) => {\n      return dispatch(dispatchFetchItemsSuccess(res));\n    })\n    .catch((e: Error) => {\n      return dispatch(dispatchFetchItemsError(e));\n    });\n  };\n}","import React from \"react\";\nimport ListItem from './ListItem';\nimport { AppState, LoadingState } from \"../redux\";\nimport { actionFetchItems } from \"../redux/item/actions\";\nimport { connect } from \"react-redux\";\nimport { ItemsState } from \"../redux/item/reducers\";\nimport { Item } from \"../models/item\";\nimport { actionPlay } from \"../redux/player/actions\";\n\nclass List extends React.Component<any, ItemsState> {\n\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(props: any, state: ItemsState) {\n        super(props, state);\n    }\n\n    componentDidMount() {\n        //if (this.props.state === 'INIT') {\n        this.props.loadData();\n        //}\n    }\n\n    onClick = (item: Item) => {\n        this.props.play(item);\n    }\n\n    isPlaying(url: string): boolean {\n        return this.props.currentPlayingUrl === url;\n    }\n\n    render() {\n        if (this.props.searchState.searchActivated) {\n            switch (this.props.searchState.state) {\n                case LoadingState.LOADING:\n                    return <div id=\"items-loading\"><i className=\"fas fa-spinner\"></i></div>\n                case LoadingState.LOADED:\n                    return <ul>\n                        {this.props.itemsState.items.map((item: Item, i: number) => (\n                            <ListItem item={item} key={i} index={i} selected={this.isPlaying(item.url)} onClick={this.onClick} />\n                        ))}\n                    </ul>\n                default:\n                    return null;\n            }\n        } else {\n            switch (this.props.itemsState.state) {\n                case LoadingState.LOADING:\n                    return <div id=\"items-loading\"><i className=\"fas fa-spinner\"></i></div>\n                case LoadingState.LOADED:\n                    return <ul>\n                        {this.props.itemsState.items.map((item: Item, i: number) => (\n                            <ListItem item={item} key={i} index={i} selected={this.isPlaying(item.url)} onClick={this.onClick} />\n                        ))}\n                    </ul>\n                default:\n                    return null;\n            }\n        }\n    }\n\n}\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        itemsState: state.items,\n        currentPlayingUrl: state.player.info.url,\n        searchState: state.search\n    }\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        loadData: () => dispatch(actionFetchItems()),\n        play: (item: Item) => dispatch(actionPlay(item))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","import React from \"react\";\nimport { slide as Menu } from \"react-burger-menu\";\n\nexport default () => {\n  return (\n    // Pass on our props\n    <Menu>\n      <a className=\"menu-item\" href=\"/\">\n        Stations\n      </a>\n\n      <a className=\"menu-item\" href=\"/\">\n        YouTube\n      </a>\n\n      <a className=\"menu-item\" href=\"/\">\n        Settings\n      </a>\n    </Menu>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Provider } from 'react-redux'\nimport store from './redux/index'\n//import logo from './logo.svg';\nimport './App.css';\nimport Header from './Header/Header';\nimport Footer from './Footer/Footer';\nimport List from './List/List';\nimport SideBar from './SideBar';\n\nexport default () => (\n  <Provider store={store}>\n    <div className=\"App\">\n      <SideBar/>\n      <div>\n        <Header store={store}></Header>\n        <List></List>\n        <Footer></Footer>\n      </div>\n    </div>\n  </Provider>\n);\n"],"sourceRoot":""}