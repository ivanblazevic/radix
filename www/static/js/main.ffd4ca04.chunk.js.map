{"version":3,"sources":["Settings/settings.module.css","redux/item/reducers.ts","redux/item/types.ts","redux/player/reducers.ts","redux/player/types.ts","redux/search/types.ts","redux/search/reducers.ts","redux/index.ts","services/player.ts","redux/search/actions.ts","Header/Header.tsx","services/items.ts","redux/player/actions.ts","Footer/Menu.tsx","Footer/Footer.tsx","redux/item/actions.ts","components/List/ListItem.tsx","components/List/List.tsx","components/List/ListContainer.tsx","SideBar.tsx","Settings/Settings.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","settings","close","LoadingState","ACTION_ITEMS_FETCH","ACTION_ITEMS_FETCH_SUCCESS","ACTION_ITEMS_FETCH_ERROR","initialState","state","INIT","items","errorMessage","ACTION_PLAYER_INFO","ACTION_PLAYER_INFO_SUCCESS","ACTION_PLAYER_INFO_ERROR","info","ACTION_SEARCH_ITEMS_FETCH","ACTION_SEARCH_ITEMS_FETCH_SUCCESS","ACTION_SEARCH_ITEMS_FETCH_ERROR","ACTION_ACTIVATE_SEARCH","searchActivated","rootReducer","combineReducers","arguments","length","undefined","action","type","Object","objectSpread","LOADING","LOADED","ERROR","search","isActive","player","createStore","applyMiddleware","thunk","PlayerService","item","url","this","HOST","title","fetch","then","response","ok","Error","statusText","json","catch","e","query","actionActivateSearch","dispatch","dispatchActivateSearch","actionSearch","searchStations","res","message","dispatchSearchError","localStorage","getItem","process","Header","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isSearching","activateSearch","setState","onSearch","event","target","value","react_default","a","createElement","className","placeholder","onChange","onClick","React","Component","connect","searchState","isActivated","FAVORITES_HOST","ItemsService","method","headers","Headers","x-apikey","body","JSON","stringify","Content-Type","id","dispatchFetchPlayerInfo","dispatchFetchPlayerInfoError","actionFetchPlayerInfo","toString","actionPlay","play","_","customStyles","content","top","left","right","bottom","marginRight","transform","background","border","overlay","Menu","modalIsOpen","menuIsOpen","node","openMenu","onTitleChange","onUrlChange","addToFavorites","handleClick","contains","openModal","bind","assertThisInitialized","closeModal","document","addEventListener","removeEventListener","_this2","ref","lib_default","isOpen","onRequestClose","style","contentLabel","Footer","loadData","Footer_Menu","store","getState","add","console","log","actionFetchItems","getAll","dispatchFetchItemsError","ListItem","selected","index","List","map","i","List_ListItem","key","isPlaying","ListContainer","currentPlayingUrl","components_List_List","itemsState","SideBar","lib_BurgerMenu","onStateChange","handleStateChange","showSettings","Settings","onIPChange","ip","setItem","oldIp","update","showHideClassName","show","styles","version","volume","htmlFor","ipHasChanged","handleClose","Modal","setAppElement","App","openSidebar","hideModal","es","src_Header_Header","List_ListContainer","src_Footer_Footer","src_Settings_Settings","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ffd4ca04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"settings_settings__34PEw\",\"close\":\"settings_close__2CzPc\"};","import { ACTION_ITEMS_FETCH_SUCCESS, ACTION_ITEMS_FETCH_ERROR, ACTION_ITEMS_FETCH } from './types'\nimport { Item } from '../../models/item';\n\nexport enum LoadingState {\n  INIT,\n  LOADING,\n  LOADED,\n  ERROR\n}\n\nexport interface ItemsState {\n  state: LoadingState,\n  items: Item[],\n  errorMessage?: string\n}\n\nconst initialState: ItemsState = {\n  state: LoadingState.INIT,\n  items: [],\n  errorMessage: \"\"\n}\n\nexport function itemReducer(\n  state = initialState,\n  action: any\n): any {\n  switch (action.type) {\n    case ACTION_ITEMS_FETCH: {\n      return { ...state, items: action.items, state: LoadingState.LOADING }\n    }\n    case ACTION_ITEMS_FETCH_SUCCESS: {\n      return { ...state, items: action.items, state: LoadingState.LOADED }\n    }\n    case ACTION_ITEMS_FETCH_ERROR: {\n      return { ...state, errorMessage: action, state: LoadingState.ERROR }\n    }\n    default:\n      return state\n  }\n}","export const ACTION_ITEMS_FETCH = 'ITEMS_FETCH';\nexport const ACTION_ITEMS_FETCH_SUCCESS = 'ITEMS_FETCH_SUCCESS';\nexport const ACTION_ITEMS_FETCH_ERROR = 'ITEMS_FETCH_ERROR';","\nimport { PlayerInfo } from '../../models/playerInfo';\nimport { ACTION_PLAYER_INFO_SUCCESS, ACTION_PLAYER_INFO_ERROR, ACTION_PLAYER_INFO } from './types';\n\nexport enum LoadingState {\n  INIT,\n  LOADING,\n  LOADED,\n  ERROR\n}\n\nexport interface PlayerState {\n  state: LoadingState,\n  info: PlayerInfo,\n  errorMessage?: string\n}\n\nconst initialState: PlayerState = {\n  state: LoadingState.INIT,\n  info: {} as PlayerInfo,\n  errorMessage: \"\"\n}\n\nexport function playerReducer(\n  state = initialState,\n  action: any\n): any {\n  switch (action.type) {\n    case ACTION_PLAYER_INFO: {\n      return { ...state, state: LoadingState.LOADING }\n    }\n    case ACTION_PLAYER_INFO_SUCCESS: {\n      return { ...state, info: action.info, state: LoadingState.LOADED }\n    }\n    case ACTION_PLAYER_INFO_ERROR: {\n      return { ...state, errorMessage: action.errorMessage, state: LoadingState.ERROR }\n    }\n    default:\n      return state\n  }\n}","export const ACTION_PLAYER_INFO = 'PLAYER_INFO';\nexport const ACTION_PLAYER_INFO_SUCCESS = 'PLAYER_INFO_SUCCESS';\nexport const ACTION_PLAYER_INFO_ERROR = 'PLAYER_INFO_ERROR';","export const ACTION_SEARCH_ITEMS_FETCH = 'SEARCH_ITEMS_FETCH';\nexport const ACTION_SEARCH_ITEMS_FETCH_SUCCESS = 'SEARCH_ITEMS_FETCH_SUCCESS';\nexport const ACTION_SEARCH_ITEMS_FETCH_ERROR = 'SEARCH_ITEMS_FETCH_ERROR';\nexport const ACTION_ACTIVATE_SEARCH = 'ACTIVATE_SEARCH';","import { ACTION_SEARCH_ITEMS_FETCH_SUCCESS, ACTION_SEARCH_ITEMS_FETCH_ERROR, ACTION_SEARCH_ITEMS_FETCH, ACTION_ACTIVATE_SEARCH } from './types'\nimport { Item } from '../../models/item';\n\nexport enum LoadingState {\n  INIT,\n  LOADING,\n  LOADED,\n  ERROR\n}\n\nexport interface SearchState {\n  state: LoadingState,\n  items: Item[],\n  errorMessage?: string,\n  searchActivated: boolean\n}\n\nconst initialState: SearchState = {\n  state: LoadingState.INIT,\n  items: [],\n  errorMessage: \"\",\n  searchActivated: false\n}\n\nexport function searchReducer(\n  state = initialState,\n  action: any\n): any {\n  switch (action.type) {\n    case ACTION_SEARCH_ITEMS_FETCH: {\n      return { ...state, items: action.items, state: LoadingState.LOADING }\n    }\n    case ACTION_SEARCH_ITEMS_FETCH_SUCCESS: {\n      return { ...state, items: action.items, state: LoadingState.LOADED }\n    }\n    case ACTION_SEARCH_ITEMS_FETCH_ERROR: {\n      return { ...state, errorMessage: action, state: LoadingState.ERROR }\n    }\n    case ACTION_ACTIVATE_SEARCH: {\n      return { ...state, searchActivated: action.isActive }\n    }\n    default:\n      return state\n  }\n}\n","import { itemReducer, ItemsState } from './item/reducers'\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { PlayerState, playerReducer } from './player/reducers';\nimport { SearchState, searchReducer } from './search/reducers';\n\nexport enum LoadingState {\n  INIT,\n  LOADING,\n  LOADED,\n  ERROR\n}\n\nexport interface AppState {\n  items: ItemsState;\n  search: SearchState;\n  player: PlayerState;\n}\n\nconst rootReducer = combineReducers({\n  items: itemReducer,\n  search: searchReducer,\n  player: playerReducer\n})\n\nexport default createStore(rootReducer, applyMiddleware(thunk))","/**\n * Communication with player\n */\n\nimport { Item } from \"../models/item\";\nimport { PlayerInfo } from \"../models/playerInfo\"; \n\nexport default class PlayerService {\n\n    private static HOST = localStorage.getItem('ip') || process.env.REACT_APP_RADIX_HOST;\n\n    static play(item: Item): Promise<any> {\n        const url = this.HOST + \"/play?url=\" + item.url + \"&title=\" + item.title;\n        return fetch(url).then(function(response) {\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }\n            return response.json();\n        }).catch(e => {\n            throw Error(e);\n        });\n    }\n\n    static info(): Promise<PlayerInfo> {\n        const url = this.HOST + \"/info\";\n        return fetch(url).then(function(response) {\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }\n            return response.json();\n        }).catch(e => {\n            throw Error(\"Offline or wrong address\");\n        });\n    }\n\n    static searchStations(query: string): Promise<Item[]> {\n        const url = this.HOST + \"/search?query=\" + query;\n        return fetch(url).then(function(response) {\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }\n            return response.json();\n        }).catch(e => {\n            throw Error(\"Offline or wrong address\");\n        });\n    }\n\n    static update(): Promise<PlayerInfo> {\n        const url = this.HOST + \"/update\";\n        return fetch(url).then(function(response) {\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }\n            return response.json();\n        }).catch(e => {\n            throw Error(\"Offline or wrong address\");\n        });\n    }\n\n}\n","import { Dispatch } from \"redux\";\nimport { ACTION_SEARCH_ITEMS_FETCH_SUCCESS, ACTION_SEARCH_ITEMS_FETCH_ERROR, ACTION_SEARCH_ITEMS_FETCH, ACTION_ACTIVATE_SEARCH } from \"./types\";\nimport PlayerService from \"../../services/player\";\n\nfunction dispatchSearch(): any {\n  return {\n    type: ACTION_SEARCH_ITEMS_FETCH\n  };\n}\n\nfunction dispatchFetchSuccess(items: any[]): any {\n  return {\n    type: ACTION_SEARCH_ITEMS_FETCH_SUCCESS,\n    items\n  };\n}\n\nfunction dispatchSearchError(e: Error): any {\n  return {\n    type: ACTION_SEARCH_ITEMS_FETCH_ERROR,\n    errorMessage: e.message\n  };\n}\n\nfunction dispatchActivateSearch(isActive: boolean): any {\n  return {\n    type: ACTION_ACTIVATE_SEARCH,\n    isActive\n  };\n}\n\nexport function actionActivateSearch(isActive: boolean) {\n  return (dispatch: Dispatch) => {\n    dispatch(dispatchActivateSearch(isActive));\n  };\n}\n\nexport function actionSearch(query: string) {\n  return (dispatch: Dispatch) => {\n    dispatch(dispatchSearch());\n    return PlayerService.searchStations(query)\n    .then((res) => {\n      return dispatch(dispatchFetchSuccess(res));\n    })\n    .catch((e: Error) => {\n      return dispatch(dispatchSearchError(e));\n    });\n  };\n}","import React from \"react\";\nimport { AppState } from \"../redux\";\nimport { actionSearch, actionActivateSearch } from \"../redux/search/actions\";\nimport { connect } from \"react-redux\";\nimport { SearchState } from \"../redux/search/reducers\";\nimport './Header.css';\n\nclass Header extends React.Component<any, any>  {\n\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(props: any, state: SearchState) {\n        super(props, state);\n    }\n\n    state = {\n        isSearching: false\n    }\n    \n    activateSearch = () => {\n        this.setState({ isSearching: !this.state.isSearching });\n        this.props.activateSearch(!this.state.isSearching);\n    }\n\n    onSearch = (event: any) => {\n        this.props.search(event.target.value);\n    }\n\n    render() {\n        return (\n            <header>\n                <div className=\"header-background-container\">\n                    <div className=\"header-background\"></div>\n                </div>\n                <div className=\"container\">\n                    <div className={ this.state.isSearching ? \"search-visible\" : \"search-hidden\" }>\n                        <span>STATIONS</span>\n                        <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Search...\" onChange={this.onSearch}/>\n                    </div>\n                    <i onClick={this.activateSearch} className={ \"fas fa-\" + (this.state.isSearching ? 'times' : 'search') }></i>\n                </div>\n            </header>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        searchState: state.search\n    }\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        search: (query: string) => dispatch(actionSearch(query)),\n        activateSearch: (isActivated: boolean) => dispatch(actionActivateSearch(isActivated))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import { Item } from \"../models/item\";\n\nconst FAVORITES_HOST = \"https://radix-83cd.restdb.io/rest/stations\";\n\nexport default class ItemsService {\n    static getAll(): Promise<Item[]> {\n        return fetch(FAVORITES_HOST, {\n            method: 'GET',\n            headers: new Headers({\n                'x-apikey': '5ae89d7625a622ae4d528762'\n            })\n        }).then(res => res.json()).catch(e => e);\n    }\n\n    static add(item: any): Promise<Item[]> {\n        return fetch(FAVORITES_HOST, {\n            method: 'POST',\n            body: JSON.stringify(item),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'x-apikey': '5ae89d7625a622ae4d528762'\n            })\n        }).then(res => res.json()).catch(e => e);\n    }\n\n    static removeFavorites(id: string): Promise<Item[]> {\n        return fetch(FAVORITES_HOST + \"/\" + id, {\n            method: 'DELETE',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'x-apikey': '5ae89d7625a622ae4d528762'\n            })\n        }).then(res => res.json()).catch(e => e);\n    }\n\n}","import { Dispatch } from \"redux\";\nimport { ACTION_PLAYER_INFO_SUCCESS, ACTION_PLAYER_INFO_ERROR, ACTION_PLAYER_INFO } from \"./types\";\nimport PlayerService from \"../../services/player\";\nimport { PlayerInfo } from \"../../models/playerInfo\";\nimport { Item } from \"../../models/item\";\nimport store from '../index';\nimport ItemsService from \"../../services/items\";\n\nfunction dispatchFetchPlayerInfo(): any {\n  return {\n    type: ACTION_PLAYER_INFO\n  };\n}\n\nfunction dispatchFetchPlayerInfoSuccess(info: PlayerInfo): any {\n  return {\n    type: ACTION_PLAYER_INFO_SUCCESS,\n    info\n  };\n}\n\nfunction dispatchFetchPlayerInfoError(errorMessage: string): any {\n  return {\n    type: ACTION_PLAYER_INFO_ERROR,\n    errorMessage\n  };\n}\n\nexport function actionFetchPlayerInfo() {\n  return (dispatch: Dispatch) => {\n    dispatch(dispatchFetchPlayerInfo());\n    return PlayerService.info()\n    .then((res) => {\n      return dispatch(dispatchFetchPlayerInfoSuccess(res));\n    })\n    .catch((e: string) => {\n      return dispatch(dispatchFetchPlayerInfoError(e.toString()));\n    });\n  };\n}\n\nexport function actionPlay(item: Item) {\n  return (dispatch: any) => {\n    dispatch(dispatchFetchPlayerInfo());\n    return PlayerService.play(item)\n    .then(_ => {\n      return dispatch(actionFetchPlayerInfo());\n    })\n    .catch((e: string) => {\n      return dispatch(dispatchFetchPlayerInfoError(e.toString()));\n    });\n  };\n}\n\nexport function actionAddToFavorites() {\n  return (dispatch: any) => {\n    const state = store.getState();\n\n    const item: Item = {\n      title: state.player.info.title,\n      url: state.player.info.url\n    }\n\n    return ItemsService.add(item).then(res => {\n      console.log(res);\n      //return dispatch(actionFetchPlayerInfo());\n      return null;\n    })\n    .catch((e: string) => {\n      return null;\n      //return dispatch(dispatchFetchPlayerInfoError(e.toString()));\n    });\n  };\n}\n","import React from \"react\";\nimport Modal from 'react-modal';\nimport { Item } from \"../models/item\";\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)',\n      background            : 'rgba(0,0,0,0.7)',\n      border                : 'none'\n    },\n    overlay : {\n        background            : 'rgba(0,0,0,0.0)'\n    }\n};\n\nclass Menu extends React.Component<any>  {\n    state = {\n        modalIsOpen: false,\n        menuIsOpen: false,\n        title: \"\",\n        url: \"\"\n    }\n\n    node: any = {};\n\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(props: any) {\n        super(props);\n\n        this.openModal = this.openModal.bind(this);\n        //this.afterOpenModal = this.afterOpenModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n\n        this.play = this.play.bind(this);\n    }\n\n    componentWillMount() {\n        document.addEventListener('mousedown', this.handleClick, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClick, false);\n    }\n\n    openModal() {\n        this.setState({ modalIsOpen: true });\n        this.setState({ menuIsOpen: false });\n    }\n\n    openMenu = () => {\n        this.setState({ menuIsOpen: true });\n    }\n\n    onTitleChange = (event: any) => {\n        this.setState({ title: event.target.value });\n    }\n\n    onUrlChange = (event: any) => {\n        this.setState({ url: event.target.value });\n    }\n\n    play = () => {\n        this.setState({ modalIsOpen: false });\n        const item: Item = {\n            title: this.state.title,\n            url: this.state.url\n        }\n        this.props.play(item);\n    }\n\n    addToFavorites = () => {\n        this.props.addToFavorites();\n    }\n\n    closeModal() {\n        this.setState({ modalIsOpen: false });\n    }\n\n    handleClick = (e:any) => {\n        if (this.node.contains(e.target)) {\n            return;\n        }\n        this.setState({ menuIsOpen: false });\n    }\n\n    render() {\n        return (\n            <div className=\"right\">\n                <i onClick={this.openMenu} className=\"fas fa-ellipsis-v\"></i>\n\n                <div ref={node => this.node = node} className={this.state.menuIsOpen ? \"menu display-block\" : \"menu display-none\"}>\n                    <div onClick={this.openModal}>Play From Url</div>\n                    <div onClick={this.addToFavorites}>Add To Favorites</div>\n                    <Modal\n                        isOpen={this.state.modalIsOpen}\n                        onRequestClose={this.closeModal}\n                        style={customStyles}\n                        contentLabel=\"Example Modal\">\n                            <div>\n                                <input placeholder=\"Title\" type=\"text\" onChange={this.onTitleChange} value={this.state.title}/>\n                            </div>\n                            <br/>\n                            <div>\n                                <input placeholder=\"Url\" type=\"text\" onChange={this.onUrlChange} value={this.state.url}/>\n                            </div>\n                            <br/>\n                            <div>   \n                                <button onClick={this.play} className=\"full-width\">Play</button>\n                            </div>\n                    </Modal>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Menu;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppState, LoadingState } from \"../redux\";\nimport { actionFetchPlayerInfo, actionPlay, actionAddToFavorites } from \"../redux/player/actions\";\nimport { PlayerState } from \"../redux/player/reducers\";\nimport Menu from './Menu';\nimport { Item } from \"../models/item\";\nimport './Footer.css';\n\nclass Footer extends React.Component<any, PlayerState> {\n\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(props: any, state: PlayerState) {\n        super(props, state);\n\n        this.play = this.play.bind(this);\n        this.addToFavorites = this.addToFavorites.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.state === LoadingState.INIT) {\n            this.props.loadData();\n        }\n    }\n\n    play(item: Item) {\n        this.props.play(item);\n    }\n\n    addToFavorites() {\n        this.props.addToFavorites();\n    }\n\n    render() {\n        return (\n            <footer>\n                <div className=\"header-background-container\">\n                    <div className=\"header-background\"></div>\n                </div>\n                {(() => {\n                    switch(this.props.state) {\n                        case LoadingState.LOADING:\n                            return <span><i className=\"fas fa-spinner\"></i>Getting Info</span>;\n                        case LoadingState.LOADED:\n                            return <span><i className=\"fas fa-music\"></i>{this.props.info.title}</span>;\n                        case LoadingState.ERROR:\n                            return <span><i className=\"fas fa-unlink\"></i>{this.props.errorMessage}</span>;\n                        default:\n                            return null;\n                        }\n                })()}\n                <Menu play={this.play} addToFavorites={this.addToFavorites}></Menu>\n            </footer>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppState) => state.player;\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n      loadData: () => dispatch(actionFetchPlayerInfo()),\n      play: (item: Item) => dispatch(actionPlay(item)),\n      addToFavorites: () => dispatch(actionAddToFavorites())\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);","import { Dispatch } from \"redux\";\nimport ItemsService from \"../../services/items\";\nimport { ACTION_ITEMS_FETCH_SUCCESS, ACTION_ITEMS_FETCH_ERROR, ACTION_ITEMS_FETCH } from \"./types\";\n\nfunction dispatchFetchItems(): any {\n  return {\n    type: ACTION_ITEMS_FETCH\n  };\n}\n\nfunction dispatchFetchItemsSuccess(items: any[]): any {\n  return {\n    type: ACTION_ITEMS_FETCH_SUCCESS,\n    items\n  };\n}\n\nfunction dispatchFetchItemsError(e: Error): any {\n  return {\n    type: ACTION_ITEMS_FETCH_ERROR,\n    errorMessage: e.message\n  };\n}\n\nexport function actionFetchItems() {\n  return (dispatch: Dispatch) => {\n    dispatch(dispatchFetchItems());\n    return ItemsService.getAll()\n    .then((res) => {\n      return dispatch(dispatchFetchItemsSuccess(res));\n    })\n    .catch((e: Error) => {\n      return dispatch(dispatchFetchItemsError(e));\n    });\n  };\n}","import React from 'react';\nimport { Item } from '../../models/item';\n\ninterface ListItemProps {\n    item: Item;\n    onClick: any; // TODO: add function def\n    index: number;\n    selected: boolean;\n}\n\nconst ListItem = (props: ListItemProps) => (\n    <li onClick={() => props.onClick(props.item)}>    \n        <span className={props.selected ? 'hidden' : ''}>{ props.index + 1 }. </span>\n        { props.item.title }\n        <div id=\"bars\" className={props.selected ? 'selected' : ''}>\n            <div className=\"bar\"></div>\n            <div className=\"bar\"></div>\n            <div className=\"bar\"></div>\n            <div className=\"bar\"></div>\n        </div>\n    </li>\n)\n\nexport default ListItem;\n","import React from 'react';\nimport { Item } from '../../models/item';\nimport { LoadingState } from '../../redux';\nimport ListItem from \"./ListItem\";\nimport './List.css';\nimport './Bars.css';\n\ninterface ListProps {\n    state: LoadingState;\n    items: Item[];\n    isPlaying: any;\n    onClick: any;\n}\n\nconst List = (props: ListProps) => {\n    switch (props.state) {\n        case LoadingState.LOADING:\n            return <div id=\"items-loading\"><i className=\"fas fa-spinner\"></i></div>\n        case LoadingState.LOADED:\n            return <ul>\n                {props.items.map((item: Item, i: number) => (\n                    <ListItem item={item} key={i} index={i} selected={props.isPlaying(item.url)} onClick={props.onClick} />\n                ))}\n            </ul>\n        default:\n            return null;\n    }\n}\n\nexport default List;\n","import { ItemsState } from \"../../redux/item/reducers\";\nimport React from \"react\";\nimport { AppState } from \"../../redux\";\nimport { actionFetchItems } from \"../../redux/item/actions\";\nimport { Item } from \"../../models/item\";\nimport { actionPlay } from \"../../redux/player/actions\";\nimport { connect } from \"react-redux\";\nimport List from \"./List\";\nimport { SearchState } from \"../../redux/search/reducers\";\n\ninterface ListContainerStateProps {\n    itemsState: ItemsState;\n    currentPlayingUrl: string;\n    searchState: SearchState;\n}\n\ninterface ListContainerProps extends ListContainerStateProps {\n    loadData: () => {},\n    play: (item: Item) => {}\n}\n\nclass ListContainer extends React.Component<ListContainerProps, ItemsState> {\n    \n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(props: ListContainerProps, state: ItemsState) {\n        super(props, state);\n    }\n\n    componentDidMount() {\n        this.props.loadData();\n    }\n\n    onClick = (item: Item) => {\n        this.props.play(item);\n    }\n\n    isPlaying(url: string): boolean | undefined {\n        if (!this.props) {\n            return;\n        }\n        return this.props.currentPlayingUrl === url;\n    }\n\n    render() {\n        if (this.props.searchState.searchActivated) {\n            return (\n                <List\n                    state={this.props.searchState.state}\n                    items={this.props.searchState.items}\n                    isPlaying={this.isPlaying}\n                    onClick={this.onClick}\n                />\n            )\n        } else {\n            return (\n                <List\n                    state={this.props.itemsState.state}\n                    items={this.props.itemsState.items}\n                    isPlaying={this.isPlaying}\n                    onClick={this.onClick}\n                />\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        itemsState: state.items,\n        currentPlayingUrl: state.player.info.url,\n        searchState: state.search\n    }\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        loadData: () => dispatch(actionFetchItems()),\n        play: (item: Item) => dispatch(actionPlay(item))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListContainer);","import React from \"react\";\nimport { slide as Menu } from \"react-burger-menu\";\n\nexport default (props: any) => {\n  return (\n    // Pass on our props\n    <Menu isOpen={props.isOpen} onStateChange={(state) => props.handleStateChange(state)}>\n      <div className=\"menu-item\">\n        Stations\n      </div>\n\n      <div className=\"menu-item\">\n        YouTube\n      </div>\n\n      <div className=\"menu-item\" onClick={_ => {\n        props.showSettings();\n        props.handleStateChange({ isOpen: false });\n      }}>\n        Settings\n      </div>\n    </Menu>\n  );\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { SearchState } from \"../redux/search/reducers\";\nimport { AppState } from \"../redux\";\nimport { actionSearch, actionActivateSearch } from \"../redux/search/actions\";\nimport PlayerService from \"../services/player\";\nimport styles from './settings.module.css';\n\nclass Settings extends React.Component<any, any>  {\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(props: any, state: SearchState) {\n        super(props, state);\n\n        this.state = {\n            ip: localStorage.getItem(\"ip\") || \"\",\n            oldIp: localStorage.getItem(\"ip\") || \"\"\n        }\n    }\n\n    onIPChange = (event: any) => {\n        this.setState({ ip: event.target.value });\n\n        const ip = event.target.value;\n        localStorage.setItem('ip', ip);\n    }\n\n    ipHasChanged() {\n        return this.state.oldIp !== this.state.ip;\n    }\n\n    update() {\n        PlayerService.update();\n    }\n\n    render() {\n        const showHideClassName = this.props.show ? \"modal display-block\" : \"modal display-none\";\n\n        return (\n            <div className={styles.settings + \" \" + showHideClassName}>\n\n                <div>\n                    Radix v{this.props.info.version}\n                </div>\n                <div>\n                    Volume: {this.props.info.volume}\n                </div>\n                <div>\n                    Playing: {this.props.info.title}\n                    <div><i>{this.props.info.url}</i></div>\n                </div>\n\n                <br/>\n\n                <label htmlFor=\"ip\">IP Address:</label>\n                <input id=\"ip\" placeholder=\"http://radix.local\" type=\"text\" value={this.state.ip} onChange={this.onIPChange}/>\n\n                { this.ipHasChanged() && \n                    <span>Restart for changes to take effect</span>\n                }\n\n                <br/>\n                <br/>\n                \n                <div>\n                    <button onClick={this.update}>Update</button>\n                </div>\n\n                <div className={styles.close} onClick={this.props.handleClose}>close</div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppState) => {\n    return {\n        searchState: state.search,\n        info: state.player.info\n    }\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        search: (query: string) => dispatch(actionSearch(query)),\n        activateSearch: (isActivated: boolean) => dispatch(actionActivateSearch(isActivated))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","import React, { Component } from 'react';\nimport { Provider } from 'react-redux'\nimport store from './redux/index'\nimport './App.css';\nimport './Utils.css';\nimport './BurgerMenu.css';\nimport Header from './Header/Header';\nimport Footer from './Footer/Footer';\nimport ListContainer from './components/List/ListContainer';\nimport SideBar from './SideBar';\nimport Settings from './Settings/Settings';\nimport Modal from 'react-modal';\n\nModal.setAppElement('#root');\n\nclass App extends Component {\n\n  state = { show: false, openSidebar: false };\n\n  show = () => {\n    this.setState({ show: true });\n  }\n\n  hideModal = () => {\n    this.setState({ show: false });\n  }\n\n  handleStateChange = (state: any) => {\n    this.setState({ openSidebar: state.isOpen });\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <SideBar isOpen={this.state.openSidebar} handleStateChange={this.handleStateChange} showSettings={this.show} />\n          <div>\n            <Header store={store}></Header>\n            <ListContainer></ListContainer>\n            <Footer></Footer>\n          </div>\n        </div>\n        <Settings show={this.state.show} handleClose={this.hideModal} />\n      </Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}